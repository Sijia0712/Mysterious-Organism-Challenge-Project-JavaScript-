// Returns a random DNA base
const returnRandBase = () => {
  const dnaBases = ['A', 'T', 'C', 'G']
  return dnaBases[Math.floor(Math.random() * 4)]
}

console.log (returnRandBase())

// Returns a random single strand of DNA containing 15 bases
const mockUpStrand = () => {
  const newStrand = []
  for (let i = 0; i < 15; i++) {
    newStrand.push(returnRandBase())
  }
  return newStrand
}

const pAequorFactory = (number, array) =>{
  return {
    specimenNum:number,
    dna:array,
    mutate(){
      let randomI = Math.floor(Math.random() * this.dna.length);
      let randomDna = this.dna[randomI];
      let dnaBases = ['A', 'T', 'C', 'G'];
      let newRandomDna = dnaBases.filter(element => element !== randomDna)[Math.floor(Math.random() * (dnaBases.length -1))];
      console.log (newRandomDna)
      this.dna.splice(randomI, 1, newRandomDna);
      return this.dna ;
      },
     compareDNA(){
      let pAequor= mockUpStrand();
      let number = 0;
      for(let i=0; i<this.dna.length;i++){
        if (this.dna[i]===pAequor[i]){
          number++ 
        }
        }
     const precentage = Math.floor(number/this.dna.length*100) 
      console.log (`specimen #1 and specimen #2 have ${precentage} % DNA in common`)
      },
      willLikelySurvive(){
        let number = 0;
        console.log (this.dna)
        for (let i =0; i<this.dna.length;i++){
          if (this.dna[i] === 'C'){
            number++
          }else if (this.dna[i] === 'G'){
            number++
          }
        }
        const precentage = Math.floor(number/this.dna.length*100) 
        if (precentage >60 ){
          return true
        } else {
          return false
        }
      }
  } 
}
pAequorFactory(2,mockUpStrand()).mutate()

pAequorFactory(2,mockUpStrand()).compareDNA()
console.log (pAequorFactory(2,mockUpStrand()).willLikelySurvive())

 function storage (){
  for (let i=0; i<=30; i++){
    if (pAequorFactory(i,mockUpStrand()).willLikelySurvive()===true){
     console.log (pAequorFactory(i,mockUpStrand())) 
    }
  }
}

storage ()
